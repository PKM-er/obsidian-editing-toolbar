name: Release Obsidian plugin

on:
    workflow_dispatch:
    push:
        # Sequence of patterns matched against refs/tags
        tags:
            - "*" # Push events to matching any tag format, i.e. 1.0, 20.15.10
env:
    PLUGIN_NAME: editing-toolbar

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   name: Use Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: 16
            -   name: Build
                id: build
                run: |
                    npm install
                    npm run build
                    mkdir ${{ env.PLUGIN_NAME }}
                    cp ./build/main.js ./build/manifest.json ./build/styles.css ${{ env.PLUGIN_NAME }}
                    zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
                    ls
                    echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.PKMER_TOKEN }}
                  VERSION: ${{ github.ref }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: false
                  prerelease: false
            -   name: Upload zip file
                id: upload-zip
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.PKMER_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./${{ env.PLUGIN_NAME }}.zip
                    asset_name: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip
                    asset_content_type: application/zip

            -   name: Upload main.js
                id: upload-main
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.PKMER_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./build/main.js
                    asset_name: main.js
                    asset_content_type: text/javascript

            -   name: Upload manifest.json
                id: upload-manifest
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.PKMER_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./build/manifest.json
                    asset_name: manifest.json
                    asset_content_type: application/json

            -   name: Upload styles.css
                id: upload-css
                uses: actions/upload-release-asset@v1
                env:
                    GITHUB_TOKEN: ${{ secrets.PKMER_TOKEN }}
                with:
                    upload_url: ${{ steps.create_release.outputs.upload_url }}
                    asset_path: ./build/styles.css
                    asset_name: styles.css
                    asset_content_type: text/css
                    

              uses: garygrossgarten/github-action-scp@release
              with: #we will upload data from folder in git hab actions to folder on server
                  local: tmp
                  remote: /www/wwwroot/pkmer.cn/_release/ 
                  host: ${{ secrets.HOST }}
                  port: ${{ secrets.PORT }}
                  username: www
                  password: ${{ secrets.SSH_PASSWORD }} 
